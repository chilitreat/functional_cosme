name: Integration Tests

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'database/**'
      - 'migrations/**'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
      - 'vitest.config.ts'
      - 'drizzle.config.ts'
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'database/**'
      - 'migrations/**'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
      - 'vitest.config.ts'
      - 'drizzle.config.ts'

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20, 22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup database
        run: |
          # テスト用データベースの準備
          touch test.db
          npm run migration:run
        env:
          NODE_ENV: test
          DATABASE_URL: './test.db'

      - name: Run TypeScript compilation check
        run: npm run build

      - name: Run integration tests
        run: npm run test:integration
        env:
          NODE_ENV: test
          DATABASE_URL: './test.db'
          JWT_SECRET: 'test-jwt-secret-for-ci'

      - name: Upload coverage reports
        if: matrix.node-version == '22'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: integration-tests
          name: integration-tests-coverage

      - name: Cleanup
        if: always()
        run: |
          rm -f test.db
